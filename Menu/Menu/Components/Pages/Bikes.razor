@page "/bikes"
@inject HttpClient Http
@rendermode RenderMode.InteractiveServer

<PageTitle>Database</PageTitle>

Select brand and model to get details<br>

<InputSelect ValueExpression="@(()=>selectedBrand)" Value="selectedBrand" ValueChanged="@((string value) => OnBrandSelect(value))">
    <option value=""></option>
    @foreach (var c in brands)
    {
        <option value="@c.Name">@c.Name</option>
    }
</InputSelect>

<InputSelect ValueExpression="@(()=>selectedMotocycle)" Value="selectedMotocycle" ValueChanged="@((string value) => OnMotocycleSelect(value))">
    <option value=""></option>
    @foreach (var c in motocycles)
    {
        <option value="@c.Model">@c.Model</option>
    }
</InputSelect>

<br>
<br>
@if (MotocycleDetails != null)
{
    <dl class="row">
        <dt class="col-sm-2">Brand</dt>
        <dd class="col-sm-10">@MotocycleDetails.MotocycleBrand</dd>

        <dt class="col-sm-2">Name</dt>
        <dd class="col-sm-10">@MotocycleDetails.Model</dd>

        <dt class="col-sm-2">Displacement</dt>
        <dd class="col-sm-10">@MotocycleDetails.Displacement cc</dd>

        <dt class="col-sm-2">HP</dt>
        <dd class="col-sm-10">@MotocycleDetails.HorsePower KM</dd>

        <dt class="col-sm-2">Start Production</dt>
        <dd class="col-sm-10">@MotocycleDetails.ProductionStartYears.Value.ToString("yyyy")</dd>
    </dl>
}

@code
{
    private BrandDTO[] brands = new BrandDTO[0];
    private MotocycleDTO[] motocycles = new MotocycleDTO[0];
    private string selectedBrand;
    private string selectedMotocycle;


    private MotocycleDTO MotocycleDetails;

    protected override async Task OnInitializedAsync()
    {
        var products = await Http.GetAsync("api/Motocycle/GetBrands");
        brands = await products.Content.ReadFromJsonAsync<BrandDTO[]>();
    }


    private async Task OnBrandSelect(string brand)
    {
        selectedBrand = brand;
        var products = await Http.GetAsync("api/Motocycle/SearchWithBrand?brand=" + brand);
        motocycles = await products.Content.ReadFromJsonAsync<MotocycleDTO[]>();
    }

    private async Task OnMotocycleSelect(string motocycle)
    {
        selectedMotocycle = motocycle;
        var products = await Http.GetAsync("api/Motocycle/SearchbyName?name=" + motocycle);
        var motocycles = await products.Content.ReadFromJsonAsync<MotocycleDTO[]>();
        MotocycleDetails = motocycles[0];
    }
}